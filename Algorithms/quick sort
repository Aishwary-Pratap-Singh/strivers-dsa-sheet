# tc = O(nlog n)
# takes no extra space unlike merge sort

def partition(a,si,ei):
    pivot = a[si]
    c = 0
    for i in range(si,ei+1):
        if pivot > a[i] :
            c += 1
    a[si+c],a[si] = a[si],a[si+c]
    pivotIndex = si + c
    i = si
    j = ei
    while i < j:
        if a[i] < pivot:
            i += 1
        elif a[j] >= pivot:
            j -= 1
        else:
            a[i],a[j] = a[j],a[i]
            i += 1
            j -= 1
    return pivotIndex

def quickSort(a,si,ei):
    if si >= ei:
        return
    pivot_index = partition(a,si,ei)
    quickSort(a,0,pivot_index)
    quickSort(a,pivot_index+1,ei)
        
arr = [3,5,4,9,8,5,6]
quickSort(arr,0,len(arr)-1)
print(arr)
